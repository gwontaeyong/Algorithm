package dp.n14916_거스름돈;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main2{

    static int change[] = {0, 2, 5};

    public static void main(String[] args) throws IOException {
        // System.setIn(Main.class.getResourceAsStream("input.txt"));
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int M = Integer.parseInt(br.readLine());

        int dp[][] = new int[change.length][M + 1];

//        for (int i = 1; i < change.length; i++) {
//            if(change[i]<=M)
//                dp[i-1][change[i]]=1;
//        }
        for (int i = 1; i < change.length; i++) {

            for (int m = 1; m <= M; m++) {

                dp[i][m] = dp[i - 1][m];

                if (m - change[i]< 0) {
                    continue;
                }

                if (m%change[i]!=0 && dp[i][m - change[i]] == 0) {
                    continue;
                }

                if (dp[i][m] != 0) {
                    dp[i][m] = Math.min(dp[i][m], dp[i][m - change[i]] + 1);
                } else
                    dp[i][m] = dp[i][m - change[i]] + 1;


            }
        }
        int[] d  = {0, 0, 1, 0, 2, 1, 3, 2, 4, 3, 2, 4, 3, 5, 4, 3, 5, 4, 6, 5, 4, 6, 5, 7, 6, 5, 7, 6, 8, 7, 6, 8, 7, 9, 8, 7, 9, 8, 10, 9, 8, 10, 9, 11, 10, 9, 11, 10, 12, 11, 10, 12, 11, 13, 12, 11, 13, 12, 14, 13, 12, 14, 13, 15, 14, 13, 15, 14, 16, 15, 14, 16, 15, 17, 16, 15, 17, 16, 18, 17, 16, 18, 17, 19, 18, 17, 19, 18, 20, 19, 18, 20, 19, 21, 20, 19, 21, 20, 22, 21, 20, 22, 21, 23, 22, 21, 23, 22, 24, 23, 22, 24, 23, 25, 24, 23, 25, 24, 26, 25, 24, 26, 25, 27, 26, 25, 27, 26, 28, 27, 26, 28, 27, 29, 28, 27, 29, 28, 30, 29, 28, 30, 29, 31, 30, 29, 31, 30, 32, 31, 30, 32, 31, 33, 32, 31, 33, 32, 34, 33, 32, 34, 33, 35, 34, 33, 35, 34, 36, 35, 34, 36, 35, 37, 36, 35, 37, 36, 38, 37, 36, 38, 37, 39, 38, 37, 39, 38, 40, 39, 38, 40, 39, 41, 40, 39, 41, 40, 42, 41, 40, 42, 41, 43, 42, 41, 43, 42, 44, 43, 42, 44, 43, 45, 44, 43, 45, 44, 46, 45, 44, 46, 45, 47, 46, 45, 47, 46, 48, 47, 46, 48, 47, 49, 48, 47, 49, 48, 50, 49, 48, 50, 49, 51, 50, 49, 51, 50, 52, 51, 50, 52, 51, 53, 52, 51, 53, 52, 54, 53, 52, 54, 53, 55, 54, 53, 55, 54, 56, 55, 54, 56, 55, 57, 56, 55, 57, 56, 58, 57, 56, 58, 57, 59, 58, 57, 59, 58, 60, 59, 58, 60, 59, 61, 60, 59, 61, 60, 62, 61, 60, 62, 61, 63, 62, 61, 63, 62, 64, 63, 62, 64, 63, 65, 64, 63, 65, 64, 66, 65, 64, 66, 65, 67, 66, 65, 67, 66, 68, 67, 66, 68, 67, 69, 68, 67, 69, 68, 70, 69, 68, 70, 69, 71, 70, 69, 71, 70, 72, 71, 70, 72, 71, 73, 72, 71, 73, 72, 74, 73, 72, 74, 73, 75, 74, 73, 75, 74, 76, 75, 74, 76, 75, 77, 76, 75, 77, 76, 78, 77, 76, 78, 77, 79, 78, 77, 79, 78, 80, 79, 78, 80, 79, 81, 80, 79, 81, 80, 82, 81, 80, 82, 81, 83, 82, 81, 83, 82, 84, 83, 82, 84, 83, 85, 84, 83, 85, 84, 86, 85, 84, 86, 85, 87, 86, 85, 87, 86, 88, 87, 86, 88, 87, 89, 88, 87, 89, 88, 90, 89, 88, 90, 89, 91, 90, 89, 91, 90, 92, 91, 90, 92, 91, 93, 92, 91, 93, 92, 94, 93, 92, 94, 93, 95, 94, 93, 95, 94, 96, 95, 94, 96, 95, 97, 96, 95, 97, 96, 98, 97, 96, 98, 97, 99, 98, 97, 99, 98, 100, 99, 98, 100, 99, 101, 100, 99, 101, 100, 102, 101, 100, 102, 101, 103, 102, 101, 103, 102, 104, 103, 102, 104, 103, 105, 104, 103, 105, 104, 106, 105, 104, 106, 105, 107, 106, 105, 107, 106, 108, 107, 106, 108, 107, 109, 108, 107, 109, 108, 110, 109, 108, 110, 109, 111, 110, 109, 111, 110, 112, 111, 110, 112, 111, 113, 112, 111, 113, 112, 114, 113, 112, 114, 113, 115, 114, 113, 115, 114, 116, 115, 114, 116, 115, 117, 116, 115, 117, 116, 118, 117, 116, 118, 117, 119, 118, 117, 119, 118, 120, 119, 118, 120, 119, 121, 120, 119, 121, 120, 122, 121, 120, 122, 121, 123, 122, 121, 123, 122, 124, 123, 122, 124, 123, 125, 124, 123, 125, 124, 126, 125, 124, 126, 125, 127, 126, 125, 127, 126, 128, 127, 126, 128, 127, 129, 128, 127, 129, 128, 130, 129, 128, 130, 129, 131, 130, 129, 131, 130, 132, 131, 130, 132, 131, 133, 132, 131, 133, 132, 134, 133, 132, 134, 133, 135, 134, 133, 135, 134, 136, 135, 134, 136, 135, 137, 136, 135, 137, 136, 138, 137, 136, 138, 137, 139, 138, 137, 139, 138, 140, 139, 138, 140, 139, 141, 140, 139, 141, 140, 142, 141, 140, 142, 141, 143, 142, 141, 143, 142, 144, 143, 142, 144, 143, 145, 144, 143, 145, 144, 146, 145, 144, 146, 145, 147, 146, 145, 147, 146, 148, 147, 146, 148, 147, 149, 148, 147, 149, 148, 150, 149, 148, 150, 149, 151, 150, 149, 151, 150, 152, 151, 150, 152, 151, 153, 152, 151, 153, 152, 154, 153, 152, 154, 153, 155, 154, 153, 155, 154, 156, 155, 154, 156, 155, 157, 156, 155, 157, 156, 158, 157, 156, 158, 157, 159, 158, 157, 159, 158, 160, 159, 158, 160, 159, 161, 160, 159, 161, 160, 162, 161, 160, 162, 161, 163, 162, 161, 163, 162, 164, 163, 162, 164, 163, 165, 164, 163, 165, 164, 166, 165, 164, 166, 165, 167, 166, 165, 167, 166, 168, 167, 166, 168, 167, 169, 168, 167, 169, 168, 170, 169, 168, 170, 169, 171, 170, 169, 171, 170, 172, 171, 170, 172, 171, 173, 172, 171, 173, 172, 174, 173, 172, 174, 173, 175, 174, 173, 175, 174, 176, 175, 174, 176, 175, 177, 176, 175, 177, 176, 178, 177, 176, 178, 177, 179, 178, 177, 179, 178, 180, 179, 178, 180, 179, 181, 180, 179, 181, 180, 182, 181, 180, 182, 181, 183, 182, 181, 183, 182, 184, 183, 182, 184, 183, 185, 184, 183, 185, 184, 186, 185, 184, 186, 185, 187, 186, 185, 187, 186, 188, 187, 186, 188, 187, 189, 188, 187, 189, 188, 190, 189, 188, 190, 189, 191, 190, 189, 191, 190, 192, 191, 190, 192, 191, 193, 192, 191, 193, 192, 194, 193, 192, 194, 193, 195, 194, 193, 195, 194, 196, 195, 194, 196, 195, 197, 196, 195, 197, 196, 198, 197, 196, 198, 197, 199, 198, 197, 199, 198, 200, 199, 198, 200, 199, 201, 200, 199, 201, 200, 202, 201, 200};
//        for(int i=0;i<=1000;i++) {
//            if(d[i] != dp[2][i])
//                System.out.print(i+" ");
//        }
     //   System.out.println(Arrays.toString(dp[2]));
//        for(int[] arr:dp)
//            System.out.println(Arrays.toString(arr));

        System.out.println(dp[2][M]);


    }
}